% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HDF5ColumnSeed.R
\name{HDF5ColumnSeed}
\alias{HDF5ColumnSeed}
\alias{DelayedArray,HDF5ColumnSeed-method}
\alias{HDF5ColumnVector}
\alias{dim,HDF5ColumnSeed-method}
\alias{type,HDF5ColumnSeed-method}
\alias{path,HDF5ColumnSeed-method}
\alias{extract_array,HDF5ColumnSeed-method}
\title{HDF5ColumnSeed}
\usage{
HDF5ColumnSeed(path, name, column, type = NULL, length = NULL)

HDF5ColumnVector(x, ...)

\S4method{DelayedArray}{HDF5ColumnSeed}(seed)

\S4method{dim}{HDF5ColumnSeed}(x)

\S4method{type}{HDF5ColumnSeed}(x)

\S4method{path}{HDF5ColumnSeed}(object)

\S4method{extract_array}{HDF5ColumnSeed}(x, index)
}
\arguments{
\item{path}{String containing a path to a HDF5-based data frame.}

\item{name}{String containing the HDF5 group of the h5 file.}

\item{column}{String containing the name of the column inside the file.}

\item{type}{String specifying the type of the data.
If \code{NULL}, this is determined by inspecting the file.
Users may specify this to avoid a look-up, or to coerce the output 
into a different type.}

\item{length}{Integer containing the number of rows.
If \code{NULL}, this is determined by inspecting the file.
This should only be supplied for efficiency purposes, to avoid a 
file look-up on construction.}

\item{x}{Either a string containing the path to an HDF5-based data frame 
file (to be used as \code{path}), or an existing HDF5ColumnSeed object.}

\item{...}{Further arguments to be passed to the \code{HDF5ColumnSeed} 
constructor.}

\item{seed, object}{A HDF5ColumnSeed object}

\item{index}{An unnamed list of integer vectors, one per dimension in x. 
See \link[S4Arrays]{extract_array}}
}
\value{
For \code{HDF5ColumnSeed}, a HDF5ColumnSeed is returned, obviously.

For \code{HDF5ColumnVector}, a HDF5ColumnVector is returned.
}
\description{
Represent a column of a HDF5-based data frame as a 1-dimensional 
\link[DelayedArray]{DelayedArray}. This allows us to use HDF5-backed data 
inside \link[S4Vectors]{DataFrame} without loading them into memory.
}
\examples{
# libraries
library(rhdf5)
library(HDF5Array)
library(HDF5DataFrame)

# h5
output_h5ad <- tempfile(fileext = ".h5")
h5createFile(output_h5ad)
h5createGroup(output_h5ad, group = "metadata")

# data
data("chickwts")
metadata <- chickwts

# set metadata
meta.data_list <- list()
for(i in 1:ncol(metadata)){
  cur_column <- as.vector(subset(metadata, 
                                 select = colnames(metadata)[i]))[[1]]
  if(is.character(cur_column) || is.factor(cur_column))
    cur_column <- as.character(cur_column)
  cur_column <- as.array(cur_column)
  meta.data_list[[colnames(metadata)[i]]] <- 
    writeHDF5Array(cur_column, 
                   output_h5ad, 
                   name = paste0("metadata", "/", 
                                 colnames(metadata)[i]), 
                   with.dimnames = FALSE)
}

# define hd5columnseed
columnseed <- HDF5ColumnSeed(path = path(meta.data_list[[1]]), 
                             name = "metadata", 
                             column = colnames(metadata)[i], 
                             type = type(meta.data_list[[1]]))

# methods
dim(columnseed)
path(columnseed)
type(columnseed)                              
                       
}
\author{
ArtÃ¼r Manukyan
}
